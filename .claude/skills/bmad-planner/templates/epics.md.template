# Epic Breakdown: {{TITLE}}

**Date:** {{DATE}}
**Author:** {{GH_USER}}
**Status:** Draft

## Overview

This document breaks down the {{TITLE}} feature into implementable epics with clear scope, dependencies, and priorities.

**References:**
- [Requirements](requirements.md) - Business requirements and acceptance criteria
- [Architecture](architecture.md) - Technical design and technology stack

## Epic Summary

| Epic ID | Name | Complexity | Priority | Dependencies | Estimated Effort |
|---------|------|------------|----------|--------------|------------------|
| E-001 | [Epic Name] | High/Med/Low | P0/P1/P2 | None | [X days/weeks] |
| E-002 | [Epic Name] | High/Med/Low | P0/P1/P2 | E-001 | [X days/weeks] |
| E-003 | [Epic Name] | High/Med/Low | P0/P1/P2 | E-001 | [X days/weeks] |

**Total Estimated Effort:** [Sum of estimates]

## Epic Definitions

### E-001: [Epic Name]

**Description:**
[1-2 sentence description of what this epic delivers]

**Scope:**
- Component/module: [e.g., Data layer, API layer, UI layer]
- Deliverables:
  - [ ] [Specific deliverable 1]
  - [ ] [Specific deliverable 2]
  - [ ] [Specific deliverable 3]

**Complexity:** High | Medium | Low

**Complexity Reasoning:**
[Why is this rated at this complexity level? What makes it challenging or straightforward?]

**Priority:** P0 | P1 | P2

**Priority Reasoning:**
- **P0** = Must have, blocks other work
- **P1** = Should have, important but not blocking
- **P2** = Nice to have, can be deferred

[Explain why this epic has this priority]

**Dependencies:**
- **Requires:** [Other epics or external dependencies that must complete first]
- **Blocks:** [Epics that depend on this one]

**Acceptance Criteria:**
- [ ] AC 1: [Specific, testable criterion]
- [ ] AC 2: [Specific, testable criterion]
- [ ] AC 3: [Specific, testable criterion]

**Related Requirements:**
- FR-001: [Requirement from requirements.md]
- FR-002: [Requirement from requirements.md]
- NFR-Performance: [Non-functional requirement]

**Technical Components:**
- Files to create/modify: [List key files]
- Database changes: [Schema changes if applicable]
- API endpoints: [New endpoints if applicable]
- Tests required: [Unit, integration, e2e]

**Estimated Effort:** [X days/weeks]

**Risks:**
| Risk | Mitigation |
|------|------------|
| [Potential issue] | [How to address] |

---

### E-002: [Epic Name]

**Description:**
[1-2 sentence description]

**Scope:**
- Component/module: [Area of work]
- Deliverables:
  - [ ] [Deliverable 1]
  - [ ] [Deliverable 2]
  - [ ] [Deliverable 3]

**Complexity:** High | Medium | Low

**Complexity Reasoning:**
[Explanation]

**Priority:** P0 | P1 | P2

**Priority Reasoning:**
[Explanation]

**Dependencies:**
- **Requires:** [Dependencies]
- **Blocks:** [What this blocks]

**Acceptance Criteria:**
- [ ] AC 1: [Criterion]
- [ ] AC 2: [Criterion]
- [ ] AC 3: [Criterion]

**Related Requirements:**
- [Requirements from requirements.md]

**Technical Components:**
- Files: [Key files]
- Database: [Changes]
- API: [Endpoints]
- Tests: [Coverage]

**Estimated Effort:** [X days/weeks]

**Risks:**
| Risk | Mitigation |
|------|------------|
| [Potential issue] | [How to address] |

---

### E-003: [Epic Name]

**Description:**
[1-2 sentence description]

**Scope:**
- Component/module: [Area of work]
- Deliverables:
  - [ ] [Deliverable 1]
  - [ ] [Deliverable 2]

**Complexity:** High | Medium | Low

**Complexity Reasoning:**
[Explanation]

**Priority:** P0 | P1 | P2

**Priority Reasoning:**
[Explanation]

**Dependencies:**
- **Requires:** [Dependencies]
- **Blocks:** [What this blocks]

**Acceptance Criteria:**
- [ ] AC 1: [Criterion]
- [ ] AC 2: [Criterion]

**Related Requirements:**
- [Requirements from requirements.md]

**Technical Components:**
- Files: [Key files]
- Database: [Changes]
- API: [Endpoints]
- Tests: [Coverage]

**Estimated Effort:** [X days/weeks]

**Risks:**
| Risk | Mitigation |
|------|------------|
| [Potential issue] | [How to address] |

---

## Implementation Plan

### Phase 1: Foundation (P0 Epics)

**Epics:** E-001

**Goal:** [What this phase achieves]

**Deliverables:**
- [Key deliverable 1]
- [Key deliverable 2]

**Success Criteria:**
- [ ] [Criterion 1]
- [ ] [Criterion 2]

---

### Phase 2: Core Features (P1 Epics)

**Epics:** E-002, E-003

**Goal:** [What this phase achieves]

**Deliverables:**
- [Key deliverable 1]
- [Key deliverable 2]

**Success Criteria:**
- [ ] [Criterion 1]
- [ ] [Criterion 2]

---

### Phase 3: Enhancements (P2 Epics)

**Epics:** [P2 epic IDs]

**Goal:** [What this phase achieves]

**Deliverables:**
- [Enhancement 1]
- [Enhancement 2]

**Success Criteria:**
- [ ] [Criterion 1]
- [ ] [Criterion 2]

---

## Dependency Graph

```
E-001 (Foundation)
  ↓
  ├─→ E-002 (Feature A) ─→ E-005 (Integration)
  │                            ↓
  └─→ E-003 (Feature B) ───────┘
       ↓
       └─→ E-004 (Enhancement)
```

**Critical Path:** E-001 → E-002 → E-005

**Parallel Work:** E-003 can be developed in parallel with E-002

---

## Timeline

| Week | Epics | Focus |
|------|-------|-------|
| Week 1 | E-001 | Foundation setup |
| Week 2 | E-002 | Core feature A |
| Week 3 | E-003 | Core feature B |
| Week 4 | E-002, E-003 | Testing and refinement |
| Week 5 | E-005 | Integration |

**Milestone Dates:**
- **M1:** Week 1 - Foundation complete
- **M2:** Week 3 - Core features complete
- **M3:** Week 5 - Integration ready

---

## Resource Requirements

### Development
- Backend developer: [X weeks]
- Frontend developer: [X weeks] (if applicable)
- DevOps: [X days] (for containers, deployment)

### Testing
- QA testing: [X days]
- Performance testing: [X days]
- Security review: [X days]

### Infrastructure
- Development database: SQLite (local)
- Staging database: PostgreSQL
- Containers: Podman + podman-compose

---

## Open Questions

- [ ] Question 1: [Decision needed before starting epic]
- [ ] Question 2: [Clarification required]
- [ ] Question 3: [Technical choice to make]

---

## Success Metrics

**Epic Completion:**
- [ ] All epic acceptance criteria met
- [ ] Test coverage ≥ 80% for each epic
- [ ] No P0 or P1 bugs in epic scope
- [ ] Code review approved

**Feature Completion:**
- [ ] All epics delivered
- [ ] End-to-end testing passed
- [ ] Performance benchmarks met
- [ ] Documentation complete

---

## Notes

[Add any additional context, decisions, or considerations here]
